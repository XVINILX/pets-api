import {
  Column,
  CreateDateColumn,
  Entity,
  JoinColumn,
  ManyToOne,
  OneToMany,
  OneToOne,
  PrimaryGeneratedColumn,
  UpdateDateColumn,
} from 'typeorm';
import { EnterpriseEntity } from './enterprise.entity';
import { UserEntity } from './user.entity';
import { FileEntity } from './file.entity';
import { AnimalGenders, AnimalType } from './animals.enum';
import { AnswerConfigEntity } from './answerConfig.entity';
import { QuestionnairyConfigEntity } from './questionnairyConfig.entity';

@Entity()
export class AnimalsEntity {
  @PrimaryGeneratedColumn('uuid')
  public id: string;

  @Column()
  public name: string;
  /*OK*/

  @Column({ nullable: true })
  public description: string;
  /*OK*/

  /*
  / The list of races will be returned by the jsons created from an external api
  */
  @Column()
  public race: string;
  /*OK*/

  /*
  / The slug will be generated by backend from the first name of pet and some numbers
  */
  @Column()
  public slug: string;

  @Column()
  public type: AnimalType;
  /*OK*/

  @Column({ nullable: true })
  public city: string;
  /*OK*/

  @Column({ nullable: true })
  public state: string;

  @Column({ nullable: true })
  public street: string;

  @Column({ nullable: true })
  public zipCode: string;

  /*OK*/

  @ManyToOne(
    () => EnterpriseEntity,
    (company: EnterpriseEntity) => company.animals,
    { nullable: true },
  )
  public company: EnterpriseEntity;

  @ManyToOne(
    () => QuestionnairyConfigEntity,
    (questionnairy: QuestionnairyConfigEntity) => questionnairy.animals,
    {
      nullable: true,
    },
  )
  public questionnairy: QuestionnairyConfigEntity;

  @ManyToOne(
    () => UserEntity,
    (enterprise: UserEntity) => enterprise.donations,
    {
      nullable: true,
    },
  )
  public receiver: UserEntity;

  @OneToMany(
    () => AnswerConfigEntity,
    (answers: AnswerConfigEntity) => answers.animal,
    { nullable: true },
  )
  public answers: AnswerConfigEntity[];

  @Column({ nullable: true })
  public initialDateAtDonation: Date;
  /*OK*/

  @Column()
  public weight: number;

  @Column()
  public gender: AnimalGenders;
  /*OK*/

  @Column()
  public castrated: boolean;
  /*OK*/

  @Column({ nullable: true })
  public specialTreatment: string;
  /*OK*/

  @Column({ nullable: true })
  public healthHistory: string;
  /*OK*/

  @Column()
  public status: string;
  /*OK*/

  @Column({ nullable: true })
  public adoptedAt: Date;
  /*OK*/

  @OneToOne(
    () => FileEntity,
    (image: FileEntity) => image.animalPrincipalImage,
    {
      nullable: true,
    },
  )
  @JoinColumn()
  public principalPicture: FileEntity;
  /*OK*/

  @OneToMany(() => FileEntity, (image: FileEntity) => image.animalImageList)
  public imagesList: FileEntity[];
  /*OK*/

  @Column({ nullable: true })
  public birthday: Date;
  /*OK*/

  @Column({ type: Boolean, default: true })
  public activate: boolean;

  @CreateDateColumn()
  public createdAt: Date;

  @UpdateDateColumn()
  public updatedAt: Date;
}
